#include <iostream>
#include <cmath>

int main() {
    setlocale(LC_ALL, "");
    long double a, b, c, x1, x2, x3, x4, D, D1, D2, t1, t2, t11, t22;
    std::cout << "a,b,c:  ";
    std::cin >> a >> b >> c;
    x1 = 0;
    if (a == 0 && b == 0 && c == 0) {
        std::cout << "Бесконечное количество решений";
    }
    if ((a != 0) && (b != 0)) {
        D = b * b - 4 * a * (c - (2 * a));
        if (D > 0) {
            t1 = ((-b) + sqrtl(D)) / (2 * a);
            t2 = ((-b) - sqrtl(D)) / (2 * a);
            D1 = (t1 * t1) - 4;
            if (D1 > 0) {
                x1 = (t1 - sqrtl(D1)) / 2;
                x2 = (t1 + sqrtl(D1)) / 2;
                std::cout << "Корни уравнения: " << x1 << ", " << x2 << "\n";
                return 0;
            }
            D2 = (t2 * t2) - 4;
            if (D2 > 0) {
                x3 = (t2 - sqrtl(D2)) / 2;
                x4 = (t2 + sqrtl(D2)) / 2;
                std::cout << "Корни уравнения: " << x3 << ", " << x4 << "\n";
                return 0;
            }
            if (D1 == 0) {
                x1 = t1 / 2;
                std::cout << "Корень уравнения: " << x1 << "\n";
            }
            else if (D2 == 0) {
                x2 = t2 / 2;
                std::cout << "Корень уравнения: " << x2 << "\n";
            }
            else if (D1 < 0 || D2 < 0) {
                std::cout << "Уравнение не имеет решений\n";
            }
        }
        if (D == 0) {
            t1 = (-b) / (2 * a);
            D1 = (t1 * t1) - 4;
            if (D1 > 0) {
                x1 = (t1 - sqrtl(D1)) / 2;
                x2 = (t1 + sqrtl(D1)) / 2;
                std::cout << "Корни уравнения: " << x1 << ", " << x2 << "\n";
            }
            if (D1 == 0) {
                x1 = t1 / 2;
                std::cout << "Корень уравнения: " << x1 << "\n";
            }
            if (D1 < 0) {
                std::cout << "Уравнение не имеет решений\n";
            }
        }
        if (D < 0) {
            std::cout << "Уравнение не имеет решений\n";
        }
    }
    else if (a == 0 && b != 0 && c != 0&&b!=-1&&c!=-1&&b!=1&&c!=1) {
        x1 = 0;
        std::cout << "Корень уравнения: " << x1 << "\n";
        D = (c * c) - (4 * b * b);
        if (D > 0) {
            x2 = (-c + sqrtl(D)) / (2 * b);
            x3 = (-c - sqrtl(D)) / (2 * b);
            std::cout << "Корни уравнения: " << x2 << ", " << x3 << "\n";
        }
        if (D == 0) {
            x2 = (-c) / (2 * b);
            std::cout << "Корень уравнения: " << x2 << "\n";
        }
    }
    else if ((a != 0) && (b == 0) && (c != 0)) {
        D = (c * c) - (4 * a * a);
        if (D > 0) {
            t11 = ((-c) + sqrtl(D)) / (2 * a);
            t22 = ((-c) - sqrtl(D)) / (2 * a);
            if (t11 >= 0) {
                x1 = sqrtl(t11);
                x2 = (-1) * sqrtl(t11);
                std::cout << "Корни уравнения: " << x1 << ", " << x2 << "\n";
            }
            if (t22 >= 0) {
                x3 = sqrtl(t22);
                x4 = (-1) * sqrtl(t22);
                std::cout << "Корни уравнения: " << x3 << ", " << x4 << "\n";
            }
        }
        if (D == 0) {
            t11 = (-c) / (2 * a);
            x1 = sqrtl(t11);
            x2 = (-1) * sqrtl(t11);
            std::cout << "Корни уравнения: " << x1 << ", " << x2 << "\n";
        }
        if (D < 0) {
            std::cout << "Уравнение не имеет решений\n";
        }
    }
    else if ((a != 0) && (b == 0) && (c == 0) || (a == 0 && b == -1 && c == -1) ) {
        std::cout << "Уравнение не имеет решений\n";
    }
    else if ((a == 0 && b == 0 && c != 0)||(a==0&&b==1&&c==-1)||(a == 0 && b == -1 && c == 1)||(a == 0 && b == 0 && c == -1) || (a == 0 && b == 0 && c == 1) || (a == 0 && b == 1 && c == 1)) {
        x1 = 0;
        std::cout << "Корень уравнения: " << x1 << "\n";
    }
    else if ((a == 0) && (b != 0) && (c == 0)) {
        x1 = 0;
        std::cout << "Корень уравнения: " << x1 << "\n";
    }
    return 0;
}


